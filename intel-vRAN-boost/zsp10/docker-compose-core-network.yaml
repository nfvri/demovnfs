version: '3.8'
services:
    mysql:
        container_name: "mysql"
        image: mysql:8.0
        volumes:
            - ./database/oai_db2.sql:/docker-entrypoint-initdb.d/oai_db.sql
            - ./healthscripts/mysql-healthcheck2.sh:/tmp/mysql-healthcheck.sh
        environment:
            - TZ=UTC
            - MYSQL_DATABASE=oai_db
            - MYSQL_USER=test
            - MYSQL_PASSWORD=test
            - MYSQL_ROOT_PASSWORD=test
        healthcheck:
            test: /bin/bash -c "/tmp/mysql-healthcheck.sh"
            interval: 10s
            timeout: 5s
            retries: 30
        networks:
             overnet: 
                 ipv4_address: 192.168.70.131
    oai-udr:
        container_name: "oai-udr"
        image: oaisoftwarealliance/oai-udr:v2.0.1
        expose:
            - 80/tcp
            - 8080/tcp
        volumes:
            - ./conf/basic_nrf_config.yaml:/openair-udr/etc/config.yaml
        environment:
            - TZ=UTC
        depends_on:
            - mysql
            - oai-nrf
        networks:
            overnet: 
                ipv4_address: 192.168.70.136
    oai-udm:
        container_name: "oai-udm"
        image: oaisoftwarealliance/oai-udm:v2.0.1
        expose:
            - 80/tcp
            - 8080/tcp
        volumes:
            - ./conf/basic_nrf_config.yaml:/openair-udm/etc/config.yaml
        environment:
            - TZ=UTC
        depends_on:
            - oai-udr
        networks:
            overnet:
                ipv4_address: 192.168.70.137
    oai-ausf:
        container_name: "oai-ausf"
        image: oaisoftwarealliance/oai-ausf:v2.0.1
        expose:
            - 80/tcp
            - 8080/tcp
        volumes:
            - ./conf/basic_nrf_config.yaml:/openair-ausf/etc/config.yaml
        environment:
            - TZ=UTC
        depends_on:
            - oai-udm
        networks:
            overnet:
                ipv4_address: 192.168.70.138
    oai-nrf:
        container_name: "oai-nrf"
        image: oaisoftwarealliance/oai-nrf:v2.0.1
        expose:
            - 80/tcp
            - 8080/tcp
        volumes:
            - ./conf/basic_nrf_config.yaml:/openair-nrf/etc/config.yaml
        environment:
            - TZ=UTC
        networks:
            overnet:
                ipv4_address: 192.168.70.130
    oai-amf:
        container_name: "oai-amf"
        image: oaisoftwarealliance/oai-amf:v2.0.1
        expose:
            - 80/tcp
            - 8080/tcp
            - 38412/sctp
        volumes:
            - ./conf/basic_nrf_config.yaml:/openair-amf/etc/config.yaml
        environment:
            - TZ=UTC
        depends_on:
            - mysql
            - oai-nrf
            - oai-ausf
        networks:
            overnet:
                ipv4_address: 192.168.70.132
    oai-smf:
        container_name: "oai-smf"
        image: oaisoftwarealliance/oai-smf:v2.0.1
        expose:
            - 80/tcp
            - 8080/tcp
            - 8805/udp
        volumes:
            - ./conf/basic_nrf_config.yaml:/openair-smf/etc/config.yaml
        environment:
            - TZ=UTC
        depends_on:
            - oai-nrf
            - oai-amf
        networks:
            overnet:
                ipv4_address: 192.168.70.133
    oai-upf:
        container_name: "oai-upf"
        image: oaisoftwarealliance/oai-upf:v2.0.1
        expose:
            - 2152/udp
            - 8805/udp
        volumes:
            - ./conf/basic_nrf_config.yaml:/openair-upf/etc/config.yaml
        environment:
            - TZ=UTC
        depends_on:
            - oai-nrf
            - oai-smf
        cap_add:
            - NET_ADMIN
            - SYS_ADMIN
        cap_drop:
            - ALL
        privileged: true
        networks:
            overnet:
                ipv4_address: 192.168.70.134
#    oai-ext-dn:
#        privileged: true
#        init: true
#        container_name: oai-ext-dn
#        image: oaisoftwarealliance/trf-gen-cn5g:latest
#        entrypoint: /bin/bash -c \
#              "ip route add 12.1.1.0/24 via 192.168.70.134 dev eth0; ip route; sleep infinity"
#        command: ["/bin/bash", "-c", "trap : SIGTERM SIGINT; sleep infinity & wait"]
#        healthcheck:
#            test: /bin/bash -c "ip r | grep 12.1.1"
#            interval: 10s
#            timeout: 5s
#            retries: 5
#        networks:
#            overnet:
#                ipv4_address: 192.168.70.135


networks:
    overnet:
        driver: overlay
        name: demo-oai-public-net
        ipam:
            config:
                - subnet: 192.168.70.0/24
       # driver_opts:
       #     com.docker.network.bridge.name: "demo-oai"
