# Default values for redis-benchmark.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of redis benchmark replicas to deploy
replicaCount: 1

# -- String to partially override chart name
nameOverride: ""
# -- String to fully override full chart name
fullnameOverride: ""

# -- Docker registry secret names as an array
imagePullSecrets: []

# -- Annotations for redis benchmark and replicas pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# -- Configure Pods Security Context
podSecurityContext: {}
  # fsGroup: 2000
## Service account redis benchmark to use.
##
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

## RBAC Configuration
rbac:
  # -- Specifies whether a cluster role binding should be created
  create: false
  # -- The cluster role name
  clusterRole: "cluster-admin"

## Service Monitor Configuration for operated Prometheus
serviceMonitor:
  # -- Specify if service monitor will be created
  create: false
  # -- Specify the namespace for the service monitor
  monitoringNamespace: monitoring
  # -- Specify extra monitoring labels for the service monitor
  monitoringLabels:
    release: k8s-prom
  # -- Specify the time scrape interval
  scrapeInterval: 5s
  # -- Specify the scrape timeout
  scrapeTimeout: 5s

## Configuration for benchmark container
benchmark:
  ## Image configuration
  image:
    # -- benchmark image repository
    repository: redis
    # -- benchmark image pull policy
    pullPolicy: IfNotPresent
    # -- Overrides the benchmark image tag whose default is the chart appVersion.
    tag: "3.2.8"
  
  # -- (array) Overrides the default benchmark container command
  command: []
  
  # -- (object) Allows you to add any scripts files in {{ chartName }}-scripts configmap, such as redis_load.sh bash script
  scripts: {}

  # -- (object) Security Context Configuration
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # --  Resources configuration of benchmark
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Optionally specify extra list of additional volumeMounts for the redis master container(s)
  extraVolumeMounts: []

## Configuration for redis container
redis:
  ## Image configuration
  image:
    # -- redis image repository
    repository: redis
    # -- redis image pull policy
    pullPolicy: IfNotPresent
    # -- Overrides the redis image tag whose default is the chart appVersion.
    tag: "3.2.8"
  
  # -- (array) Overrides the default redis container command
  command: []

  # -- (object) Allows you to add any config files in {{ chartName }}-config configmap, such as redis.conf file
  config: {}
  
  # -- (object) Allows you to add any scripts files in {{ chartName }}-scripts configmap, such as redis_load.sh bash script
  scripts: {}

  # -- (object) Security Context Configuration
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  ## Service of redis container
  service:
    # -- Specifies the type of service to deploy for redis
    type: ClusterIP
    # -- Specifies the port of service for redis
    port: 6379

  ##  Resources configuration of redis container
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Optionally specify extra list of additional volumeMounts for the redis master container(s)
  extraVolumeMounts: []

## Configuration for exporter container
exporter:
  ## Image configuration
  image:
    # -- exporter image repository
    repository: bitnami/redis-exporter
    pullPolicy: IfNotPresent
    # -- exporter image pull policy
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  # -- (object) Security Context Configuration
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  ## Service of exporter container
  service:
    # -- Specifies the type of service to deploy for exporter
    type: ClusterIP
    # -- Specifies the port of service for exporter
    port: 9121
    
  ##  Resources configuration of exporter container
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  
  # -- Optionally specify extra list of additional volumeMounts for the exporter master container(s)
  extraVolumeMounts: []

## Autoscaling configuration
autoscaling:
  # -- Enable replica autoscaling settings
  enabled: false
  # -- Minimum replicas for the pod autoscaling
  minReplicas: 1
  # -- Maximum replicas for the pod autoscaling
  maxReplicas: 100
  # -- Percentage of CPU to consider when autoscaling
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- (object) Node labels for redis benchmark pods assignment
nodeSelector: {}

# -- (array) Tolerations for redis benchmark pods assignment
tolerations: []

# -- (object)  Affinity for redis benchmark pods assignment
affinity: {}

# -- Optionally specify extra list of additional volumes for the redis becnhmark master pod(s)
extraVolumes: []
