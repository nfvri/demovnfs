apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nfvri-rllib-base.fullname" . }}
  labels:
    {{- include "nfvri-rllib-base.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nfvri-rllib-base.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nfvri-rllib-base.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # serviceAccountName: {{ include "nfvri-rllib-base.serviceAccountName" . }} # useful ?? 
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: tf-serving-client
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.args }}
          args: {{- toYaml .Values.args | nindent 10}}
          {{- else }}
          args: ["bash", "-c", "while true; do sleep 10; done"]
          {{- end }}
          volumeMounts: 
            - name: scripts
              mountPath: /scripts
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: scripts  
          configMap: 
            name: {{ include "nfvri-rllib-base.fullname" . }}-scripts
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
