apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "stress-ng.fullname" . }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: stress-ng
  template:
    metadata:
      labels:
        app: stress-ng
    spec:
      containers:
      - name: stress-ng
        workingDir: /
        securityContext:
        {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion}}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.command }}
        command: {{ .Values.command }}
        {{- else }}
        command: ["bash", "-c", "cp /app/load_generator.py / && /usr/bin/python3 /load_generator.py"]
        {{- end }}
        env:
        - name: CPU_WORKERS
          value: {{ .Values.stress.cpuWorkers | quote }}
        - name: MAX_LOAD
          value: {{ .Values.stress.maxLoad | quote }}
        - name: TIMER
          value: {{ .Values.stress.timer | quote }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: load-generator-py
          mountPath: /app/
        - name: pattern
          mountPath: /pattern/
      volumes:
        - name: load-generator-py
          configMap:
            name: {{ include "stress-ng.fullname" . }}
        - name: pattern
          configMap:
            name: {{ include "stress-ng.fullname" . }}-pattern
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 10 }}
      {{- end }}
